(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{301:function(n,t,s){"use strict";s.r(t);var a=s(43),e=Object(a.a)({},function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"console-log-输出彩色文字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#console-log-输出彩色文字","aria-hidden":"true"}},[n._v("#")]),n._v(" console.log 输出彩色文字")]),n._v(" "),s("p",[n._v("一个简单的功能，更多情况下，我更喜欢用原生的东西，而不是急着找第三方的支持。")]),n._v(" "),s("p",[n._v("在 grunt 脚本中，如果要打印出带颜色的 log，我更倾向于使用如下的方式：")]),n._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[n._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"the \\x1b[43mParty\\x1b[0m is fucking \\x1b[31m%s\\x1b[0m u know?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"shitty"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n")])])]),s("p",[n._v("可以在 node 的 REPL（Read-Eval-Print-Loop，node 的可交互运行环境）里执行以上的代码看效果（如果有人跟曾经的我一样是个 node 白痴，那就让我这个白痴减1来「指导」一下：首先确认 node 已安装，然后在你的命令行工具里输入 node，回车，这样就进入了 REPL 了，可以使用命令 .help 来看看怎么玩）。")]),n._v(" "),s("p",[n._v("这样的代码虽然看起来很不友好，不容易读懂，但对于简单的任务来说，已经足够。复杂的任务可以使用第三方的包如 npm colors package。")]),n._v(" "),s("p",[n._v("上面的"),s("code",[n._v("\\x1b[0m")]),n._v("表示"),s("code",[n._v("「清除之前所有的样式」")]),n._v("，不管前面叠加了几个样式，统统都不见了，如下：")]),n._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[n._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"the \\x1b[42m\\x1b[34m\\x1b[46mGreat Fire Wall\\x1b[0m is most ugly and stupid!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n")])])]),s("p",[n._v("以下是可以使用的文本命令的参考：")]),n._v(" "),s("p",[n._v("前景色（文字颜色）：")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("\\x1b[30m = 黑色\n\\x1b[31m = 红色\n\\x1b[32m = 绿色\n\\x1b[33m = 黄色\n\\x1b[34m = 蓝色\n\\x1b[35m = 洋红色\n\\x1b[36m = 青色\n\\x1b[37m = 白色\n背景色：\n\n\\x1b[40m = 黑色\n\\x1b[41m = 红色\n\\x1b[42m = 绿色\n\\x1b[43m = 黄色\n\\x1b[44m = 蓝色\n\\x1b[45m = 洋红色\n\\x1b[46m = 青色\n\\x1b[47m = 白色\n其他：\n\n\\x1b[0m = 清除样式\n\\x1b[1m = 加粗\n\\x1b[2m = 半透明\n\\x1b[4m = 下划线\n\\x1b[5m = 闪动\n\\x1b[7m = 取反：背景色变前景色 前景色变背景色\n\\x1b[8m = 看不见 但位置还留着\n\n")])])]),s("p",[n._v("不难看出有以下规律可循：")]),n._v(" "),s("p",[n._v("所有的文本命令都是以 \\x1b[ 打头\n以m 结尾\n中间一到两位数字\n两位数字是颜色 4# 表示背景色 3# 表示前景色\n前景 / 背景色的第二个数对应的颜色一样\n一位数字是控制\n…其实我也只是在 这里 get 了的这个技能。")])])},[],!1,null,null,null);e.options.__file="给console.log一点颜色看看.md";t.default=e.exports}}]);